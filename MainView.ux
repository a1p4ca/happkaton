<App>

	<ClientPanel>
		<JavaScript>
			const Observable = require('FuseJS/Observable')
			const users = Observable(
			    {
			        id: 0,
			        name: "사람인",
			        image: "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSvwALUKGflg-nRY0Z0Xr0pjmfrnxhLtJsU39GFX2RTmSQ_skBLww",
			        bio: "저는 고기잡는 사람입니다.",
			        follower: [1, 2], // 자신을 팔로우하는 사람
			        following: [1, 3, 4] // 자신이 팔로잉하는 사람
			    },
			    {
			        id: 1,
			        name: "홍길동",
			        image: "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSvwALUKGflg-nRY0Z0Xr0pjmfrnxhLtJsU39GFX2RTmSQ_skBLww",
			        bio: "저는 회먹는 사람입니다",
			        follower: [0, 3],
			        following: [0, 2, 3, 4]
			    },
			    {
			        id: 2,
			        name: "김건",
			        image: "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSvwALUKGflg-nRY0Z0Xr0pjmfrnxhLtJsU39GFX2RTmSQ_skBLww",
			        bio: "울진 해양 전문가",
			        follower: [1, 4],
			        following: [0, 4]
			    },
			    {
			        id: 3,
			        name: "John",
			        image: "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSvwALUKGflg-nRY0Z0Xr0pjmfrnxhLtJsU39GFX2RTmSQ_skBLww",
			        bio: "Beautiful Sea",
			        follower: [0, 1],
			        following: [1, 4]
			    },
			    {
			        id: 4,
			        name: "이지은",
			        image: "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSvwALUKGflg-nRY0Z0Xr0pjmfrnxhLtJsU39GFX2RTmSQ_skBLww",
			        bio: "바다 넘 조아용~",
			        follower: [0, 1, 2, 3],
			        following: [2]
			    }
			)

			const posts = Observable(
			    {
			        userid: 0,
			        location: ['59.9117715', '10.7400957'],
			        message: "고기 잡았다!",
			        image: "http://cfile10.uf.tistory.com/image/124C5A3B502CFB370EE113",
			        date: new Date()
			    },
			    {
			        userid: 3,
			        location: ['38.9157715', '160.7400957'],
			        message: "즐거운 바다여행~",
			        image: "http://cfile10.uf.tistory.com/image/124C5A3B502CFB370EE113",
			        date: new Date()
			    },
			    {
			        userid: 4,
			        location: ['70.1035214', '30.7400957'],
			        message: "바다왔어요 여러분!",
			        image: "http://cfile10.uf.tistory.com/image/124C5A3B502CFB370EE113",
			        date: new Date()
			    }
			)
			const mocks = {users: users, posts: posts}
			const location = Observable(mocks.posts.getAt(2).location)
			const latitude = Observable(location.value[0])
			const longtitude = Observable(location.value[1])

			setInterval(() => {
				latitude.value = mocks.posts.getAt(Math.random() * 3 | 0).location[0]
				longtitude.value = mocks.posts.getAt(Math.random() * 3 | 0).location[1]

			}, 2000)

			module.exports = {
				latitude, longtitude
			}

			console.log(module.exports.longtitude.toString())
		</JavaScript>
		<JavaScript File="MainView.js" />
		<Panel ux:Class="ExploreItem" Margin="20" CardAlignment="Left" BoxSizing="FillAspect" Aspect="1.85" InDetailsMode="false">
			<Panel ux:Dependency="detailsImagePanel" />
			<Panel ux:Dependency="detailsPlacesPanel" />
			<Panel ux:Dependency="detailsInfoPanel" />
			<Panel ux:Dependency="detailsFactsPanel" />

			<bool ux:Property="InDetailsMode" /> 


			<string ux:Property="ImageName" />
			<string ux:Property="Country" />
			<float4 ux:Property="ForegroundColor" />
			<Alignment ux:Property="CardAlignment" />

			<Panel ux:Name="placeContainer" Width="55%" Alignment="{ReadProperty CardAlignment}">
				<Panel ux:Name="placeRect">
					<StackPanel Width="80%" Alignment="CenterLeft" Margin="32,0,0,0">
						<Text Value="{ReadProperty ImageName}" TextColor="#fff" FontSize="26 * (width(placeContainer) / 230)" TextWrapping="Wrap" />
						<Text Value="{ReadProperty Country}" TextColor="#fff" FontSize="12 * (width(placeContainer) / 230)" Margin="0,20,0,0" />
					</StackPanel>

					<Rectangle Color="{ReadProperty ForegroundColor}" Opacity="0.9" Layer="Background" />
				</Panel>
			</Panel>

			<Panel Width="60%" Alignment="{ReadProperty CardAlignment}">
				<Panel ux:Name="infoRect" Color="#fff" Opacity="0">
					<Grid ux:Name="infoRectContent" Rows="1*,1*" Padding="30" Opacity="0">
						<Translation ux:Name="infoRectContentTrans" Y="0.15" RelativeTo="Size" />
						<Each Items="{numbers}">
							<Grid Rows="1*,1*" Height="60">
								<Text Value="{title}" FontSize="20" />
								<Text Value="{fact}" FontSize="10" TextColor="#aaa" />
							</Grid>
						</Each>
					</Grid>
				</Panel>
			</Panel>

			<Panel ux:Name="imgMaster" Height="85%">
				<Image ux:Name="img" LayoutMaster="imgMaster" StretchMode="UniformToFill" File="{image}" /> 
			</Panel>

			<WhileTrue Value="{ReadProperty InDetailsMode}">
				<Move Easing="CubicInOut" Target="img" Vector="1" RelativeTo="PositionOffset" RelativeNode="detailsImagePanel" Duration="0.6" />
				<Resize Easing="CubicInOut" Target="img" Vector="1" RelativeTo="Size" RelativeNode="detailsImagePanel" Duration="0.6" />


				<Move Easing="CubicInOut" Target="placeRect" Vector="1" RelativeTo="PositionOffset" RelativeNode="detailsPlacesPanel" Duration="0.6" />
				<Resize Easing="CubicInOut" Target="placeRect" Vector="1" RelativeTo="Size" RelativeNode="detailsPlacesPanel" Duration="0.6" />

				<Move Easing="CubicInOut" Target="infoRect" Vector="1" RelativeTo="PositionOffset" RelativeNode="detailsInfoPanel" Duration="0.6" />
				<Resize Easing="CubicInOut" Target="infoRect" Vector="1" RelativeTo="Size" RelativeNode="detailsInfoPanel" Duration="0.6" />

				<Change img.LayoutMaster="detailsImagePanel" Delay="0.6" />
				<Change placeRect.LayoutMaster="detailsPlacesPanel" Delay="0.6" />
				<Change infoRect.LayoutMaster="detailsInfoPanel" Delay="0.6" />


				<Change infoRect.Opacity="1" Duration="0.6" />

				<Change infoRectContent.Opacity="1" Delay="0.45" Duration="0.35" />
				<Change infoRectContentTrans.Y="0" Duration="0.35" Delay="0.4" Easing="CubicInOut" />

				<Change factsPanel.Opacity="1" Duration="0.35" Delay="0.55" />
				<Change factsPanelTrans.Y="0" Duration="0.35" Delay="0.55" Easing="CubicInOut" />
				<Change factsPanel.HitTestMode="LocalBoundsAndChildren" />

				<BringToFront /> 
			</WhileTrue>

			<Grid ux:Name="factsPanel" LayoutMaster="detailsFactsPanel" Opacity="0" HitTestMode="None" Rows="1*,50">
				<Translation ux:Name="factsPanelTrans" Y="0.2" RelativeTo="Size" />
				<PageControl ux:Name="factsPageControl">
					<Each Items="{facts}">
						<StackPanel Alignment="Top" Margin="30">
							<Text Value="FACTS" TextColor="#fff" />
							<Text TextWrapping="Wrap" TextColor="#fff" Margin="0,15,0,0" FontSize="14" Value="{}" />
						</StackPanel>
					</Each>
				</PageControl>
				<PageIndicator Navigation="factsPageControl" Alignment="Center">
					<Circle ux:Template="Dot" Width="6" Height="6" Margin="5">
						<SolidColor Color="1,1,1,0.3" ux:Name="TheColor" />
						<Stroke Width="1" Color="#fff" />
						<ActivatingAnimation>
							<Change TheColor.Color="#fff" />
							<Scale Factor="1.2" />
						</ActivatingAnimation>
					</Circle>
				</PageIndicator>
			</Grid>

			<WhileTrue Value="{Read current} != {id} &amp;&amp; {inDetailsMode}">
				<Change this.Opacity="0" Duration=".4" />
				<Change this.HitTestMode="None" />
				<Move Y="100" Duration="0.4" />
			</WhileTrue>
		</Panel>
		<NativeViewHost> 

			<Rectangle Alignment="BottomCenter" Color="#ffffff" CornerRadius="20" Margin="20, 0, 20, 15" Width="390" Height="620">
				<Rectangle Color="#e3e4e8" Width="200" CornerRadius="10" Alignment="Top" Margin="0, 7, 0, 0" Height="5" />
				<ScrollView> <!-- 여기서부터 복붙시작 -->
					
						<StackPanel HitTestMode="LocalBoundsAndChildren">
						<Selection MinCount="0" MaxCount="1" Value="{Write current}"/>
						<Each Items="{places}">
							<ExploreItem ux:Name="topItem" ImageName="{name}" Country="{country}"
										 ForegroundColor="{color}" Height="200" CardAlignment="{alignment}" 
										 detailsImagePanel="detailsImagePanel"
										 detailsPlacesPanel="detailsPlacesPanel"
										 detailsInfoPanel="detailsInfoPanel"
										 detailsFactsPanel="detailsFactsPanel">
								<Shadow Mode="PerPixel" />
								<Selectable Value="{id}" />

								<WhileSelected>
									<Change topItem.InDetailsMode="true" />
								</WhileSelected>

								<Tapped>
									<!-- perhaps just toggle when clicking while not in details mode -->
									<ToggleSelection />
								</Tapped>

							</ExploreItem>
						</Each>
					</StackPanel>
						
				</ScrollView>
			</Rectangle>
			
			<Rectangle Color="#ffffff" Width="260" Height="50" Alignment="TopLeft" Margin="20, 15, 0, 0">
				<Image File="search.png" Height="25" Width="25" Alignment="CenterRight" Margin="0, 0, 15, 0" />
				<TextInput Width="210" Height="40" Alignment="CenterRight" Margin="0, 0, 5, 0" Background="#ffffff" ux:Name="shadow" Value="지도 검색" />
			</Rectangle>
			<Image File="Assets/kakao_profile.png" Alignment="TopRight" Margin="0, 15, 15, 0" Width="50" Height="50" />
			<MapView Latitude="70.1035214" Longitude="30.7400957" Zoom="1">
				<MapMarker Latitude="{latitude}" Longitude="{longtitude}" Label="도동등대(멸치)" />
			</MapView>
		</NativeViewHost>
	</ClientPanel>
</App>